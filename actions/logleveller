#!/usr/bin/env bash

function dmcm_run_logleveller(){
  if [[ $(id -u) -eq "0" ]]; then
    local script="${DMCM_SERVICE_DIR}/monitor/sbin/log-leveller.sh"
    local port=$(grep -o "jmxremote.port=[0-9]*" "${DMCM_SERVICE_DIR}/monitor/default/monitor" | cut -d'=' -f2)

    $script -u localhost:$port $*
  else
    dmcm_error "You must be root to do that."
    return 1
  fi
}

function dmcm_get_loglevel(){
  local services=$(echo $2 | tr ',' ' ')

  for sv in $services; do
    local f="${DMCM_SERVICE_DIR}/$sv/resources/log4j.xml"
    [[ -e $f ]] || continue

    local re=$(grep -e 'category name="\(.*\)"' $f | $SED 's/.*name="\(.*\)".*/\1/g' | cut -d' ' -f1 | sed 's/"//g' | xargs | tr ' ' '|')
    local lines=""

    for line in $(dmcm_run_logleveller getlevel -f "log4j:($re)" | $SED "s/ -> /|/g"); do
      local ns=$(echo $line | cut -d'|' -f1)
      local v=$(echo $line | cut -d'|' -f2)

      case $v in
        TRACE) v="1-${dmcm_error_clr}$v${dmcm_reset_clr}" ;;
        DEBUG) v="2-${dmcm_debug_clr}$v${dmcm_reset_clr}" ;;
        INFO)  v="3-${dmcm_warn_clr}$v${dmcm_reset_clr}" ;;
        WARN)  v="4-$v" ;;
        ERROR) v="5-$v" ;;
        FATAL) v="6-$v" ;;
        OFF)   v="7-$v" ;;
        null)  v="8-NULL" ;;
      esac

      lines="$lines $(echo "$v|$ns" )"
    done

    echo "dmcm-$sv"
    echo "$lines" | tr ' ' "\n" | tail -n+2 | sort -n | $SED "s/^[0-9]-//g" | tr '|' ' ' | awk '{ printf "%-50s %s\n", $2, $1 }' | tr ' ' '.'
    echo ""
  done
}

function dmcm_set_loglevel(){
  local levels="OFF FATAL ERROR WARN INFO DEBUG TRACE"
  local value=$(echo $4 | tr "[a-z]" "[A-Z]")

  echo ${levels} | grep -i -w "$value" > /dev/null
  [ $? != "0" ] && dmcm_error "Invalid loglevel '$value' given.\nAvailable levels:\n$(dmcm_format_rows $levels)" && return 1

  dmcm_run_logleveller setlevel $value 'log4j:es.*'
}
